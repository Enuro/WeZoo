//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "goods_pets")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub goods_id: String,
    pub pet_types_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::goods::Entity",
        from = "Column::GoodsId",
        to = "super::goods::Column::IdExt",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Goods,
    #[sea_orm(
        belongs_to = "super::pet_types::Entity",
        from = "Column::PetTypesId",
        to = "super::pet_types::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    PetTypes,
}

impl Related<super::goods::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Goods.def()
    }
}

impl Related<super::pet_types::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PetTypes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
