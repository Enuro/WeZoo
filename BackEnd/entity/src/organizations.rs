//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.7

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "organizations")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub desc: Option<String>,
    pub inn: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::cliniks::Entity")]
    Cliniks,
    #[sea_orm(has_many = "super::goods_orgs::Entity")]
    GoodsOrgs,
    #[sea_orm(has_many = "super::producers::Entity")]
    Producers,
}

impl Related<super::cliniks::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Cliniks.def()
    }
}

impl Related<super::goods_orgs::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::GoodsOrgs.def()
    }
}

impl Related<super::producers::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Producers.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
